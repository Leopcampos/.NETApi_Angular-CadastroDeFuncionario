{"ast":null,"code":"import { environment } from 'src/environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CadastroDependentesComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r5, \" \");\n  }\n}\nfunction CadastroDependentesComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r6, \" \");\n  }\n}\nfunction CadastroDependentesComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, item_r7.nome), \" \");\n  }\n}\nfunction CadastroDependentesComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r8, \" \");\n  }\n}\nexport class CadastroDependentesComponent {\n  //injeção de dependência\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //atributo\n    this.listagemFuncionarios = [];\n    this.mensagem = \"\"; //exibir mensagens de erro ou sucesso\n    //atributos para capturar as mensagens de erro\n    this.errosNome = [];\n    this.errosDataNascimento = [];\n    this.errosFuncionarioId = [];\n  }\n  ngOnInit() {\n    // chamada para consultar os funcionários\n    this.consultarFuncionarios();\n  }\n  //função executada para consultar os funcionarios\n  consultarFuncionarios() {\n    //enviando uma chamada GET para a api\n    this.httpClient.get(environment + \"/funcionarios\").subscribe(data => {\n      this.listagemFuncionarios = data;\n    }, e => {\n      console.log(e);\n    });\n  }\n  //função para realizar o cadastro do dependente\n  cadastrarDependente(formCadastro) {\n    //limpar as mensagens de erro\n    this.errosNome = [];\n    this.errosDataNascimento = [];\n    this.errosFuncionarioId = [];\n    this.mensagem = \"Processando, por favor aguarde...\";\n    //executando a requisição POST para a API..\n    this.httpClient.post(environment + '/dependentes', formCadastro.form.value, {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.mensagem = data; //exibindo a mensagem obtida da API..\n      formCadastro.form.reset(); //limpar o conteudo do formulário\n    }, e => {\n      this.mensagem = \"\";\n      //verificar o tipo de erro retornado pela api..\n      switch (e.status) {\n        case 400:\n          //BAD REQUEST (Erro de validação)\n          var result = JSON.parse(e.error);\n          this.errosNome = result.errors.Nome;\n          this.errosDataNascimento = result.errors.DataNascimento;\n          this.errosFuncionarioId = result.errors.FuncionarioId;\n          break;\n        case 500:\n          //INTERNAL SERVER ERROR\n          this.mensagem = e.error;\n          break;\n      }\n    });\n  }\n  //função para limpar todas as mensagens da página\n  limparMensagens() {\n    this.errosNome = [];\n    this.errosDataNascimento = [];\n    this.errosFuncionarioId = [];\n    this.mensagem = \"\";\n  }\n}\nCadastroDependentesComponent.ɵfac = function CadastroDependentesComponent_Factory(t) {\n  return new (t || CadastroDependentesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nCadastroDependentesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadastroDependentesComponent,\n  selectors: [[\"app-cadastro-dependentes\"]],\n  decls: 30,\n  vars: 6,\n  consts: [[\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\", 3, \"hidden\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"row\"], [1, \"col-md-4\"], [3, \"submit\"], [\"formCadastro\", \"ngForm\"], [\"type\", \"text\", \"name\", \"nome\", \"ngModel\", \"\", \"placeholder\", \"Ex: Jo\\u00E3o da Silva\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"date\", \"name\", \"dataNascimento\", \"ngModel\", \"\", 1, \"form-control\"], [\"name\", \"funcionarioId\", \"ngModel\", \"\", 1, \"form-select\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", \"value\", \"Cadastrar Dependente\", 1, \"btn\", \"btn-success\"], [1, \"text-danger\"], [3, \"value\"]],\n  template: function CadastroDependentesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r9 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"strong\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CadastroDependentesComponent_Template_button_click_3_listener() {\n        return ctx.limparMensagens();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"h5\");\n      i0.ɵɵtext(5, \"Cadastro de Dependentes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 3)(9, \"form\", 4, 5);\n      i0.ɵɵlistener(\"submit\", function CadastroDependentesComponent_Template_form_submit_9_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r0 = i0.ɵɵreference(10);\n        return i0.ɵɵresetView(ctx.cadastrarDependente(_r0));\n      });\n      i0.ɵɵelementStart(11, \"label\");\n      i0.ɵɵtext(12, \"Nome do Dependente:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵtemplate(14, CadastroDependentesComponent_div_14_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"label\");\n      i0.ɵɵtext(17, \"Data de Nascimento:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵtemplate(19, CadastroDependentesComponent_div_19_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵelementStart(21, \"label\");\n      i0.ɵɵtext(22, \"Selecione o Funcion\\u00E1rio:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"select\", 9)(24, \"option\", 10);\n      i0.ɵɵtext(25, \"Escolha uma op\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, CadastroDependentesComponent_option_26_Template, 3, 4, \"option\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, CadastroDependentesComponent_div_27_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelement(28, \"br\")(29, \"input\", 12);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"hidden\", !ctx.mensagem);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.mensagem);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errosNome);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errosDataNascimento);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listagemFuncionarios);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errosFuncionarioId);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.UpperCasePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["environment","i0","CadastroDependentesComponent","constructor","httpClient","ngOnInit","consultarFuncionarios","get","subscribe","data","listagemFuncionarios","e","console","log","cadastrarDependente","formCadastro","errosNome","errosDataNascimento","errosFuncionarioId","mensagem","post","form","value","responseType","reset","status","result","JSON","parse","error","errors","Nome","DataNascimento","FuncionarioId","limparMensagens","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projetos\\Funcionarios\\Funcionarios\\ClientApp\\src\\app\\cadastro-dependentes\\cadastro-dependentes.component.ts","C:\\Projetos\\Funcionarios\\Funcionarios\\ClientApp\\src\\app\\cadastro-dependentes\\cadastro-dependentes.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Component({\r\n  selector: 'app-cadastro-dependentes',\r\n  templateUrl: './cadastro-dependentes.component.html',\r\n  styleUrls: ['./cadastro-dependentes.component.css']\r\n})\r\nexport class CadastroDependentesComponent {\r\n\r\n  //atributo\r\n  listagemFuncionarios: any[] = [];\r\n  mensagem: string = \"\"; //exibir mensagens de erro ou sucesso\r\n\r\n  //atributos para capturar as mensagens de erro\r\n  errosNome = [];\r\n  errosDataNascimento = [];\r\n  errosFuncionarioId = [];\r\n\r\n  //injeção de dependência\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    // chamada para consultar os funcionários\r\n    this.consultarFuncionarios();\r\n  }\r\n\r\n  //função executada para consultar os funcionarios\r\n  consultarFuncionarios(): void {\r\n    //enviando uma chamada GET para a api\r\n    this.httpClient.get<any[]>(environment + \"/funcionarios\")\r\n      .subscribe(\r\n        (data: any[]) => { //retorno de sucesso da API\r\n          this.listagemFuncionarios = data;\r\n        },\r\n        e => {\r\n          console.log(e);\r\n        }\r\n      );\r\n  }\r\n\r\n  //função para realizar o cadastro do dependente\r\n  cadastrarDependente(formCadastro: any): void {\r\n\r\n    //limpar as mensagens de erro\r\n    this.errosNome = [];\r\n    this.errosDataNascimento = [];\r\n    this.errosFuncionarioId = [];\r\n\r\n    this.mensagem = \"Processando, por favor aguarde...\";\r\n\r\n    //executando a requisição POST para a API..\r\n    this.httpClient.post(environment + '/dependentes',\r\n      formCadastro.form.value, { responseType: 'text' })\r\n      .subscribe(\r\n        data => { //retorno de sucesso da API..\r\n          this.mensagem = data; //exibindo a mensagem obtida da API..\r\n          formCadastro.form.reset(); //limpar o conteudo do formulário\r\n        },\r\n        e => { //retorno de erro da API..\r\n\r\n          this.mensagem = \"\";\r\n\r\n          //verificar o tipo de erro retornado pela api..\r\n          switch (e.status) {\r\n            case 400: //BAD REQUEST (Erro de validação)\r\n              var result = JSON.parse(e.error);\r\n\r\n              this.errosNome = result.errors.Nome;\r\n              this.errosDataNascimento = result.errors.DataNascimento;\r\n              this.errosFuncionarioId = result.errors.FuncionarioId;\r\n\r\n              break;\r\n\r\n            case 500: //INTERNAL SERVER ERROR\r\n              this.mensagem = e.error;\r\n              break;\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  //função para limpar todas as mensagens da página\r\n  limparMensagens(): void {\r\n    this.errosNome = [];\r\n    this.errosDataNascimento = [];\r\n    this.errosFuncionarioId = [];\r\n\r\n    this.mensagem = \"\";\r\n  }\r\n}\r\n","<div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\"\r\n    [hidden]=\"!mensagem\">\r\n    <strong>{{mensagem}}</strong>\r\n    <button type=\"button\" class=\"btn-close\" (click)=\"limparMensagens()\" aria-label=\"Close\"></button>\r\n</div>\r\n\r\n<h5>Cadastro de Dependentes</h5>\r\n<br />\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n\r\n        <form #formCadastro=\"ngForm\" (submit)=\"cadastrarDependente(formCadastro)\">\r\n\r\n            <label>Nome do Dependente:</label>\r\n            <input type=\"text\" class=\"form-control\" name=\"nome\" ngModel placeholder=\"Ex: João da Silva\" />\r\n            <div class=\"text-danger\" *ngFor=\"let item of errosNome\">\r\n                {{item}}\r\n            </div>\r\n            <br />\r\n\r\n            <label>Data de Nascimento:</label>\r\n            <input type=\"date\" class=\"form-control\" name=\"dataNascimento\" ngModel />\r\n            <div class=\"text-danger\" *ngFor=\"let item of errosDataNascimento\">\r\n                {{item}}\r\n            </div>\r\n            <br />\r\n\r\n            <label>Selecione o Funcionário:</label>\r\n            <select class=\"form-select\" name=\"funcionarioId\" ngModel>\r\n                <option value=\"\">Escolha uma opção</option>\r\n\r\n                <option *ngFor=\"let item of listagemFuncionarios\" value=\"{{item.id}}\">\r\n                    {{item.nome | uppercase}}\r\n                </option>\r\n\r\n            </select>\r\n            <div class=\"text-danger\" *ngFor=\"let item of errosFuncionarioId\">\r\n                {{item}}\r\n            </div>\r\n            <br />\r\n\r\n            <input type=\"submit\" value=\"Cadastrar Dependente\" class=\"btn btn-success\" />\r\n\r\n        </form>\r\n\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}