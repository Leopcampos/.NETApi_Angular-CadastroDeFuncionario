{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CadastroFuncionariosComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r6, \" \");\n  }\n}\nfunction CadastroFuncionariosComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r7, \" \");\n  }\n}\nfunction CadastroFuncionariosComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r8, \" \");\n  }\n}\nfunction CadastroFuncionariosComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r9, \" \");\n  }\n}\nfunction CadastroFuncionariosComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r10, \" \");\n  }\n}\nexport class CadastroFuncionariosComponent {\n  //injeção de dependência\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //atributos\n    this.mensagemSucesso = '';\n    this.mensagemErro = '';\n    this.errosNome = [];\n    this.errosCpf = [];\n    this.errosMatricula = [];\n    this.errosDataAdmissao = [];\n    this.errosSalario = [];\n  }\n  //função executada quando o componente é carregado\n  ngOnInit() {}\n  //função executada no SUBMIT do formulario\n  cadastrarFuncionario(formCadastro) {\n    this.limparMensagens(); //executando a função para limpas as mensagens da página\n    //requisição POST para API\n    this.httpClient.post(environment.apiUrl + '/funcionarios', formCadastro.form.value, {\n      responseType: 'text'\n    }).subscribe(\n    //captura o promisse da API(retorno de sucesso ou erro)\n    data => {\n      //escrevendo a mensagem de sucesso\n      this.mensagemSucesso = data;\n      //limpar os campos do formulário\n      formCadastro.form.reset();\n    }, e => {\n      console.log(e);\n      switch (e.status) {\n        case 400:\n          var result = JSON.parse(e.error);\n          this.errosNome = result.errors.Nome;\n          this.errosCpf = result.errors.Cpf;\n          this.errosMatricula = result.errors.Matricula;\n          this.errosDataAdmissao = result.errors.DataAdmissao;\n          this.errosSalario = result.errors.Salario;\n          break;\n        case 403:\n          this.mensagemErro = e.error;\n          break;\n        case 500:\n          this.mensagemErro = e.error;\n          break;\n      }\n    });\n  }\n  //função para limpar as mensagens do formulário\n  limparMensagens() {\n    this.mensagemSucesso = \"\";\n    this.mensagemErro = \"\";\n    this.errosNome = [];\n    this.errosCpf = [];\n    this.errosMatricula = [];\n    this.errosDataAdmissao = [];\n    this.errosSalario = [];\n  }\n}\nCadastroFuncionariosComponent.ɵfac = function CadastroFuncionariosComponent_Factory(t) {\n  return new (t || CadastroFuncionariosComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nCadastroFuncionariosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadastroFuncionariosComponent,\n  selectors: [[\"app-cadastro-funcionarios\"]],\n  decls: 41,\n  vars: 9,\n  consts: [[\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\", 3, \"hidden\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\", 3, \"hidden\"], [1, \"row\"], [1, \"col-md-4\"], [3, \"submit\"], [\"formCadastro\", \"ngForm\"], [\"type\", \"text\", \"placeholder\", \"Ex: Jo\\u00E3o da Silva\", \"name\", \"nome\", \"ngModel\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"000.000.000-00\", \"name\", \"cpf\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"0000-000\", \"name\", \"matricula\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"date\", \"name\", \"dataAdmissao\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"0.00\", \"name\", \"salario\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Cadastrar Funcion\\u00E1rio\", 1, \"btn\", \"btn-success\"], [1, \"text-danger\"]],\n  template: function CadastroFuncionariosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r11 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"strong\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CadastroFuncionariosComponent_Template_button_click_3_listener() {\n        return ctx.limparMensagens();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"strong\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function CadastroFuncionariosComponent_Template_button_click_7_listener() {\n        return ctx.limparMensagens();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"h5\");\n      i0.ɵɵtext(9, \"Cadastro de Funcion\\u00E1rios\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"div\", 4)(13, \"form\", 5, 6);\n      i0.ɵɵlistener(\"submit\", function CadastroFuncionariosComponent_Template_form_submit_13_listener() {\n        i0.ɵɵrestoreView(_r11);\n        const _r0 = i0.ɵɵreference(14);\n        return i0.ɵɵresetView(ctx.cadastrarFuncionario(_r0));\n      });\n      i0.ɵɵelementStart(15, \"label\");\n      i0.ɵɵtext(16, \"Nome do Funcion\\u00E1rio:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 7);\n      i0.ɵɵtemplate(18, CadastroFuncionariosComponent_div_18_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"label\");\n      i0.ɵɵtext(21, \"CPF:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵtemplate(23, CadastroFuncionariosComponent_div_23_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵelementStart(25, \"label\");\n      i0.ɵɵtext(26, \"Matr\\u00EDcula:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 10);\n      i0.ɵɵtemplate(28, CadastroFuncionariosComponent_div_28_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelement(29, \"br\");\n      i0.ɵɵelementStart(30, \"label\");\n      i0.ɵɵtext(31, \"Data de Admiss\\u00E3o:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 11);\n      i0.ɵɵtemplate(33, CadastroFuncionariosComponent_div_33_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelement(34, \"br\");\n      i0.ɵɵelementStart(35, \"label\");\n      i0.ɵɵtext(36, \"Sal\\u00E1rio:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 12);\n      i0.ɵɵtemplate(38, CadastroFuncionariosComponent_div_38_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelement(39, \"br\")(40, \"input\", 13);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"hidden\", !ctx.mensagemSucesso);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.mensagemSucesso);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !ctx.mensagemErro);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.mensagemErro);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errosNome);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errosCpf);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errosMatricula);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errosDataAdmissao);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errosSalario);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["environment","i0","CadastroFuncionariosComponent","constructor","httpClient","ngOnInit","cadastrarFuncionario","formCadastro","limparMensagens","post","apiUrl","form","value","responseType","subscribe","data","mensagemSucesso","reset","e","console","log","status","result","JSON","parse","error","errosNome","errors","Nome","errosCpf","Cpf","errosMatricula","Matricula","errosDataAdmissao","DataAdmissao","errosSalario","Salario","mensagemErro","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Projetos\\Funcionarios\\Funcionarios\\ClientApp\\src\\app\\cadastro-funcionarios\\cadastro-funcionarios.component.ts","C:\\Projetos\\Funcionarios\\Funcionarios\\ClientApp\\src\\app\\cadastro-funcionarios\\cadastro-funcionarios.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment.development';\r\n\r\n@Component({\r\n  selector: 'app-cadastro-funcionarios',\r\n  templateUrl: './cadastro-funcionarios.component.html',\r\n  styleUrls: ['./cadastro-funcionarios.component.css']\r\n})\r\nexport class CadastroFuncionariosComponent {\r\n\r\n  //atributos\r\n  mensagemSucesso: string = '';\r\n  mensagemErro: string = '';\r\n\r\n  errosNome = [];\r\n  errosCpf = [];\r\n  errosMatricula = [];\r\n  errosDataAdmissao = [];\r\n  errosSalario = [];\r\n\r\n  //injeção de dependência\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  //função executada quando o componente é carregado\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  //função executada no SUBMIT do formulario\r\n  cadastrarFuncionario(formCadastro: any): void {\r\n\r\n    this.limparMensagens(); //executando a função para limpas as mensagens da página\r\n\r\n    //requisição POST para API\r\n    this.httpClient.post(environment.apiUrl + '/funcionarios', formCadastro.form.value,\r\n      { responseType: 'text' })\r\n      .subscribe(//captura o promisse da API(retorno de sucesso ou erro)\r\n        (data) => {//retorno de sucesso\r\n\r\n          //escrevendo a mensagem de sucesso\r\n          this.mensagemSucesso = data;\r\n\r\n          //limpar os campos do formulário\r\n          formCadastro.form.reset();\r\n        },\r\n        e => {//retorno de erro\r\n          console.log(e);\r\n\r\n          switch (e.status) {\r\n            case 400:\r\n              var result = JSON.parse(e.error);\r\n              \r\n              this.errosNome = result.errors.Nome;\r\n              this.errosCpf = result.errors.Cpf;\r\n              this.errosMatricula = result.errors.Matricula;\r\n              this.errosDataAdmissao = result.errors.DataAdmissao;\r\n              this.errosSalario = result.errors.Salario;\r\n\r\n              break;\r\n\r\n            case 403:\r\n              this.mensagemErro = e.error;\r\n              break;\r\n\r\n            case 500:\r\n              this.mensagemErro = e.error;\r\n              break;\r\n          }\r\n        }\r\n      )\r\n  }\r\n\r\n  //função para limpar as mensagens do formulário\r\n  limparMensagens(): void {\r\n    this.mensagemSucesso = \"\";\r\n    this.mensagemErro = \"\";\r\n\r\n    this.errosNome = [];\r\n    this.errosCpf = [];\r\n    this.errosMatricula = [];\r\n    this.errosDataAdmissao = [];\r\n    this.errosSalario = [];\r\n  }\r\n}","<div class=\"alert alert-success alert-dismissible fade show\" [hidden]=\"!mensagemSucesso\" role=\"alert\">\r\n    <strong>{{mensagemSucesso}}</strong>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"limparMensagens()\"></button>\r\n</div>\r\n\r\n<div class=\"alert alert-danger alert-dismissible fade show\" [hidden]=\"!mensagemErro\" role=\"alert\">\r\n    <strong>{{mensagemErro}}</strong>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"limparMensagens()\"></button>\r\n</div>\r\n\r\n<h5>Cadastro de Funcionários</h5>\r\n<br />\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n\r\n           <form #formCadastro=\"ngForm\" (submit)=\"cadastrarFuncionario(formCadastro)\">\r\n\r\n                  <label>Nome do Funcionário:</label>\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Ex: João da Silva\" name=\"nome\" ngModel />\r\n                  <div *ngFor=\"let item of errosNome\" class=\"text-danger\">\r\n                         {{item}}\r\n                  </div>\r\n                  <br />\r\n\r\n                  <label>CPF:</label>\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"000.000.000-00\" name=\"cpf\" ngModel />\r\n                  <div *ngFor=\"let item of errosCpf\" class=\"text-danger\">\r\n                         {{item}}\r\n                  </div>\r\n                  <br />\r\n\r\n                  <label>Matrícula:</label>\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"0000-000\" name=\"matricula\" ngModel />\r\n                  <div *ngFor=\"let item of errosMatricula\" class=\"text-danger\">\r\n                         {{item}}\r\n                  </div>\r\n                  <br />\r\n\r\n                  <label>Data de Admissão:</label>\r\n                  <input type=\"date\" class=\"form-control\" name=\"dataAdmissao\" ngModel />\r\n                  <div *ngFor=\"let item of errosDataAdmissao\" class=\"text-danger\">\r\n                         {{item}}\r\n                  </div>\r\n                  <br />\r\n\r\n                  <label>Salário:</label>\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"0.00\" name=\"salario\" ngModel />\r\n                  <div *ngFor=\"let item of errosSalario\" class=\"text-danger\">\r\n                         {{item}}\r\n                  </div>\r\n                  <br />\r\n\r\n                  <input type=\"submit\" value=\"Cadastrar Funcionário\" class=\"btn btn-success\" />\r\n\r\n           </form>\r\n\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}